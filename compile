#!/bin/bash

# Simple script that allows three types of builds
# make clean && brunch, make installclean && brunch,
#            or runs ./sync && ./picks.sh && (make clean && brunch)

#ARGS
TYPE=$1
DEVICE=$2
UPLOAD=$3

help() {
echo " "
echo "	compile <command> <device>"
echo "	commands are :"
echo "	c for make clean && brunch <device>"
echo "	i for make installclean && brunch <device>"
echo "	s for ./sync && ./pick && c"
echo "  u for checkout upstream in device repos && c"
echo " "
}

upstream(){
	cd device/samsung/d2-common && checkout_upstream && cd $root
	cd device/samsung/msm8960-common && checkout_upstream && cd $root
	cd device/samsung/qcom-common && checkout_upstream && cd $root
}

checkout_upstream() {
	CURRENT_REPO=`pwd`
	CURRENT_REPO=${CURRENT_REPO##*/}
	echo " Checking out $CURRENT_REPO to AOKP upstream"
        git fetch upstream && git checkout upstream/jb-mr1
}

cleanbuild() {
	lunchchoices
	make clean
}

icleanbuild () {
	lunchchoices
	make installclean
}

syncpick() {
	./sync
	./picks.sh
}

brunchit () {
	 time brunch $DEVICE
}

lunchchoices() {
	lunch aokp_$DEVICE-userdebug
}

root=`pwd`

# Load environment
if [ ! -d platform_manifest ]; then
	echo "Not in root of source tree!!"
	exit
else
	. build/envsetup.sh >/dev/null 2>&1
fi

# Check command
if [ "$TYPE" = "help" ]; then
	help
	exit
elif [ "$TYPE" = "c" ]; then
	cleanbuild
	brunchit
elif [ "$TYPE" = "i" ]; then
	icleanbuild
	brunchit
elif [ "$TYPE" = "s" ]; then
	syncpick
	cleanbuild
	brunchit
elif [ "$TYPE" = "u" ]; then
	sync
	upstream
	cleanbuild
	brunchit
else
	echo " No build command given"
	echo "    "
	echo "  compile <command> <device> "
	echo "  compile help for help with build commands"
fi 

if [ "$UPLOAD" = "-y" ]; then
	# Just move zip out of build dir for now
	ZIP=` find out/target/product/$DEVICE -name *aokp_\*unofficial*.zip `
	if [ ! -d ~/zips/$DEVICE ]; then
		mkdir ~/zips/$DEVICE
	fi
	cp $ZIP ~/zips/$DEVICE
fi
